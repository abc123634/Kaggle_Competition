library(rpart)
library(randomForest)
dir()
setwd("~/GitHub/Kaggle_Competition/Titanic")
dir()
training = read.csv("train.csv", header = T, sep = ",")
test = read.csv("test.csv", header = T, sep = ",")
fmla = formula(survived ~ Sex + Age + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
fmla = formula(Survived ~ Sex + Age + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
data = read.csv("train.csv", header = T, sep = ",")
data = read.csv("train.csv", header = T, sep = ",")
indices = sample(1:nrow(data), size = 0.8*nrow(data))
training = data[indices, ]
test = data[-indices, ]
fmla = formula(Survived ~ Pclass+ Sex + Age + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
rf = randomForest(fmla, data = training, na.action = na.fail)
which(train$Survived)
which(training$Survived)
which(training$Survived == '')
e
tree = rpart(fmla, data = training, method = "class")
fmla = formula(Survived ~ Pclass + Sex + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training, na.action = na.fail)
rf = randomForest(fmla, data = training)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
library(rpart)
library(randomForest)
data <- read.csv("train.csv", header = T, sep = ",")
indices = sample(1:nrow(data), size = 0.8*nrow(data))
training = data[indices, ]
test = data[-indices, ]
fmla = formula(Survived ~ Pclass + Sex + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
library(rpart)
library(randomForest)
data <- read.csv("train.csv", header = T, sep = ",")
indices = sample(1:nrow(data), size = 0.8*nrow(data))
training = data[indices, ]
test = data[-indices, ]
training <- as.data.frame(training)
test <- as.data.frame(test)
fmla = formula(Survived ~ Pclass + Sex + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
fmla = formula(as.factor(Survived) ~ Pclass + Sex + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
library(rpart)
library(randomForest)
data <- read.csv("train.csv", header = T, sep = ",")
indices = sample(1:nrow(data), size = 0.8*nrow(data))
training = data[indices, ]
test = data[-indices, ]
training <- as.data.frame(training)
test <- as.data.frame(test)
fmla = formula(as.factor(Survived) ~ Pclass + Sex + SibSp + Parch + Fare)
tree = rpart(fmla, data = training, method = "class")
pred_tree = predict(tree, newdata = test, type = "class")
accuracy_tree = sum(pred_tree == test$Survived) / nrow(test)
rf = randomForest(fmla, data = training)
pred_rf = predict(rf, newdata = test, type = "class")
accuracy_rf = sum(pred_rf == test$Survived) / nrow(test)
importance(rf)
importance(tree)
fmla2 = formula(as.factor(Survived) ~ Pclass + Sex + SibSp + Fare)
tree2 = rpart(fmla, data = training, method = "class")
pred_tree2 = predict(tree2, newdata = test, type = "class")
accuracy_tree2 = sum(pred_tree2 == test$Survived) / nrow(test)
fmla2 = formula(as.factor(Survived) ~ Pclass + Sex + SibSp + Fare)
tree2 = rpart(fmla2, data = training, method = "class")
pred_tree2 = predict(tree2, newdata = test, type = "class")
accuracy_tree2 = sum(pred_tree2 == test$Survived) / nrow(test)
fmla2 = formula(as.factor(Survived) ~  Sex + SibSp + Fare)
tree2 = rpart(fmla2, data = training, method = "class")
pred_tree2 = predict(tree2, newdata = test, type = "class")
accuracy_tree2 = sum(pred_tree2 == test$Survived) / nrow(test)
fmla2 = formula(as.factor(Survived) ~  Pclass + Sex + SibSp + Parch + Fare + Embarked)
tree2 = rpart(fmla2, data = training, method = "class")
pred_tree2 = predict(tree2, newdata = test, type = "class")
accuracy_tree2 = sum(pred_tree2 == test$Survived) / nrow(test)
library(e1071)
svm = svm(fmla, data = training)
pred_svm = predict(svm, newdata = test, type = "class")
accuracy_svm = sum(pred_svm == test$Survived) / nrow(test)
